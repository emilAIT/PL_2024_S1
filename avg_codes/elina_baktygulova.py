{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(James Mckinney:65)\n",
      "(James Lawrence:62)\n",
      "(Tara Bryan:61)\n",
      "(Julie Mitchell:50)\n",
      "(Robert Fisher:64)\n",
      "(Whitney Smith:67)\n",
      "(Brittany Spence:60)\n",
      "(Destiny Mcclure:77)\n",
      "(Regina Mcclure:71)\n",
      "(Mr. Phillip Molina:67)\n",
      "(Ashley Meyers:42)\n",
      "(Paul Reynolds:67)\n",
      "(Todd Browning:70)\n",
      "(Anthony Cooke:69)\n",
      "(Susan Murray:72)\n",
      "(James Atkins DVM:48)\n",
      "(Michael Parker:59)\n",
      "(Connor Hubbard:72)\n",
      "(Brendan Gibbs:56)\n",
      "(Joseph Smith:70)\n",
      "(Jeremy Green:66)\n",
      "(Wesley Smith:54)\n",
      "(William Castillo:60)\n",
      "(Teresa Green:66)\n",
      "(Mr. James Perkins:30)\n",
      "(Jason Park:43)\n",
      "(Sierra Jones:73)\n",
      "(Sean Martin:76)\n",
      "(Karen Quinn:72)\n",
      "(Julia Hernandez:68)\n",
      "(Timothy Johnson:73)\n",
      "(Manuel Douglas:76)\n",
      "(Deborah Spence:73)\n",
      "(Veronica Willis:49)\n",
      "(Ryan Wilkins:69)\n",
      "(Michelle Lopez:74)\n",
      "(Thomas Weber:60)\n",
      "(Jessica Hernandez:70)\n",
      "(Jamie Gallegos:67)\n",
      "(Eric Robbins:53)\n",
      "(Lisa Bennett:77)\n",
      "(Matthew Roberts:72)\n",
      "(David Mcconnell:62)\n",
      "(Robert Powers:35)\n",
      "(Austin Jimenez:70)\n",
      "(Brianna Gonzalez:52)\n",
      "(Jesse Thompson:57)\n",
      "(Gregory French:45)\n",
      "(Melissa Aguilar:56)\n",
      "(Jim Meyer:53)\n",
      "(Andrew Taylor:58)\n",
      "(Jasmine Kelley:63)\n",
      "(Steven Bradley:53)\n",
      "(Victoria Johnson:57)\n",
      "(Darren Jones:70)\n",
      "(Frank Phillips:67)\n",
      "(Ronald Le:62)\n",
      "(Bethany Fernandez:73)\n",
      "(Shelley Sims:59)\n",
      "(Crystal Cole:43)\n"
     ]
    },
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'exam4.csv'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[8], line 53\u001b[0m\n\u001b[0;32m     49\u001b[0m         \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m(\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mname\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m:\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mavg_score\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m)\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m     52\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mcsv\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m reader, writer\n\u001b[1;32m---> 53\u001b[0m scores \u001b[38;5;241m=\u001b[39m \u001b[43mget_average_score\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mexam4.csv\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[0;32m     54\u001b[0m d \u001b[38;5;241m=\u001b[39m {name:score \u001b[38;5;28;01mfor\u001b[39;00m name, score \u001b[38;5;129;01min\u001b[39;00m scores}\n\u001b[0;32m     55\u001b[0m out \u001b[38;5;241m=\u001b[39m []\n",
      "Cell \u001b[1;32mIn[8], line 4\u001b[0m, in \u001b[0;36mget_average_score\u001b[1;34m(filename)\u001b[0m\n\u001b[0;32m      3\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mget_average_score\u001b[39m(filename):\n\u001b[1;32m----> 4\u001b[0m     \u001b[38;5;28;01mwith\u001b[39;00m \u001b[38;5;28;43mopen\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mfilename\u001b[49m\u001b[43m)\u001b[49m \u001b[38;5;28;01mas\u001b[39;00m fid:\n\u001b[0;32m      5\u001b[0m         r \u001b[38;5;241m=\u001b[39m reader(fid)\n\u001b[0;32m      7\u001b[0m         \u001b[38;5;66;03m###return [(None, None)]\u001b[39;00m\n",
      "File \u001b[1;32m~\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python312\\site-packages\\IPython\\core\\interactiveshell.py:324\u001b[0m, in \u001b[0;36m_modified_open\u001b[1;34m(file, *args, **kwargs)\u001b[0m\n\u001b[0;32m    317\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m file \u001b[38;5;129;01min\u001b[39;00m {\u001b[38;5;241m0\u001b[39m, \u001b[38;5;241m1\u001b[39m, \u001b[38;5;241m2\u001b[39m}:\n\u001b[0;32m    318\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m    319\u001b[0m         \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mIPython won\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mt let you open fd=\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mfile\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m by default \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    320\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mas it is likely to crash IPython. If you know what you are doing, \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    321\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124myou can use builtins\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m open.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    322\u001b[0m     )\n\u001b[1;32m--> 324\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mio_open\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfile\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'exam4.csv'"
     ]
    }
   ],
   "source": [
    "my_name = 'Elina Baktygulova'\n",
    "from csv import reader\n",
    "def get_average_score(filename):\n",
    "    with open(filename) as fid:\n",
    "        r = reader(fid)\n",
    "\n",
    "#My code\n",
    "import csv\n",
    "\n",
    "file_path = 'exam_final.csv'\n",
    "data = []\n",
    "\n",
    "with open(file_path, newline='') as csvfile:\n",
    "    reader = csv.reader(csvfile)\n",
    "    headers = next(reader)\n",
    "    for row in reader:\n",
    "        data.append(row)\n",
    "\n",
    "name_index = headers.index('names')\n",
    "score_10_14_index = headers.index('10/14/2024')\n",
    "score_10_21_index = headers.index('10/21/2024')\n",
    "score_10_21_alt_index = headers.index('10/21/2024')\n",
    "score_indices = [headers.index(date) for date in headers if '/' in date][:7]\n",
    "\n",
    "for row in data:\n",
    "    for i in range(len(row)):\n",
    "        if row[i] == \"absent\":\n",
    "            row[i] = 0\n",
    "        elif i != name_index:\n",
    "            try:\n",
    "                row[i] = float(row[i])\n",
    "            except ValueError:\n",
    "                row[i] = 0\n",
    "\n",
    "    if row[score_10_21_index] > 0 and row[score_10_21_alt_index] > 0:\n",
    "        row[score_10_21_index], row[score_10_21_alt_index] = row[score_10_21_alt_index], row[score_10_21_index]\n",
    "\n",
    "results = []\n",
    "for row in data:\n",
    "    name = row[name_index]\n",
    "    max_score = max(row[i] for i in score_indices)\n",
    "    score_10_14 = row[score_10_14_index]\n",
    "    avg_score = (max_score * 0.7) + (score_10_14 * 0.075)\n",
    "    results.append((name, round(avg_score)))\n",
    "\n",
    "\n",
    "for name, avg_score in results:\n",
    "    if name:  \n",
    "        print(f\"({name}:{avg_score})\")\n",
    "\n",
    "\n",
    "from csv import reader, writer\n",
    "scores = get_average_score(\"exam4.csv\")\n",
    "d = {name:score for name, score in scores}\n",
    "out = []\n",
    "with open('result.csv') as fid:\n",
    "    r = reader(fid)\n",
    "    out.append(list(next(r)) + [my_name])\n",
    "    for i in r:\n",
    "        res = i + [d.get(i[0],'')]\n",
    "        out.append(res)\n",
    "with open('result.csv', 'w', newline='') as fid:\n",
    "    w = writer(fid)\n",
    "    w.writerows(out)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(James Mckinney: 65)\n",
      "(James Lawrence: 62)\n",
      "(Tara Bryan: 61)\n",
      "(Julie Mitchell: 50)\n",
      "(Robert Fisher: 64)\n",
      "(Whitney Smith: 67)\n",
      "(Brittany Spence: 60)\n",
      "(Destiny Mcclure: 77)\n",
      "(Regina Mcclure: 71)\n",
      "(Mr. Phillip Molina: 67)\n",
      "(Ashley Meyers: 42)\n",
      "(Paul Reynolds: 67)\n",
      "(Todd Browning: 70)\n",
      "(Anthony Cooke: 69)\n",
      "(Susan Murray: 72)\n",
      "(James Atkins DVM: 48)\n",
      "(Michael Parker: 59)\n",
      "(Connor Hubbard: 72)\n",
      "(Brendan Gibbs: 56)\n",
      "(Joseph Smith: 70)\n",
      "(Jeremy Green: 66)\n",
      "(Wesley Smith: 54)\n",
      "(William Castillo: 60)\n",
      "(Teresa Green: 66)\n",
      "(Mr. James Perkins: 30)\n",
      "(Jason Park: 43)\n",
      "(Sierra Jones: 73)\n",
      "(Sean Martin: 76)\n",
      "(Karen Quinn: 72)\n",
      "(Julia Hernandez: 68)\n",
      "(Timothy Johnson: 73)\n",
      "(Manuel Douglas: 76)\n",
      "(Deborah Spence: 73)\n",
      "(Veronica Willis: 49)\n",
      "(Ryan Wilkins: 69)\n",
      "(Michelle Lopez: 74)\n",
      "(Thomas Weber: 60)\n",
      "(Jessica Hernandez: 70)\n",
      "(Jamie Gallegos: 67)\n",
      "(Eric Robbins: 53)\n",
      "(Lisa Bennett: 77)\n",
      "(Matthew Roberts: 72)\n",
      "(David Mcconnell: 62)\n",
      "(Robert Powers: 35)\n",
      "(Austin Jimenez: 70)\n",
      "(Brianna Gonzalez: 52)\n",
      "(Jesse Thompson: 57)\n",
      "(Gregory French: 45)\n",
      "(Melissa Aguilar: 56)\n",
      "(Jim Meyer: 53)\n",
      "(Andrew Taylor: 58)\n",
      "(Jasmine Kelley: 63)\n",
      "(Steven Bradley: 53)\n",
      "(Victoria Johnson: 57)\n",
      "(Darren Jones: 70)\n",
      "(Frank Phillips: 67)\n",
      "(Ronald Le: 62)\n",
      "(Bethany Fernandez: 73)\n",
      "(Shelley Sims: 59)\n",
      "(Crystal Cole: 43)\n"
     ]
    }
   ],
   "source": [
    "import csv\n",
    "\n",
    "file_path = 'exam_final.csv'\n",
    "data = []\n",
    "\n",
    "with open(file_path, newline='') as csvfile:\n",
    "    reader = csv.reader(csvfile)\n",
    "    headers = next(reader)\n",
    "    for row in reader:\n",
    "        data.append(row)\n",
    "\n",
    "name_index = headers.index('names')\n",
    "score_10_14_index = headers.index('10/14/2024')\n",
    "score_10_21_index = headers.index('10/21/2024')\n",
    "score_10_21_alt_index = headers.index('10/21/2024')\n",
    "score_indices = [headers.index(date) for date in headers if '/' in date][:7]\n",
    "\n",
    "for row in data:\n",
    "    for i in range(len(row)):\n",
    "        if row[i] == \"absent\":\n",
    "            row[i] = 0\n",
    "        elif i != name_index:\n",
    "            try:\n",
    "                row[i] = float(row[i])\n",
    "            except ValueError:\n",
    "                row[i] = 0\n",
    "\n",
    "    if row[score_10_21_index] > 0 and row[score_10_21_alt_index] > 0:\n",
    "        row[score_10_21_index], row[score_10_21_alt_index] = row[score_10_21_alt_index], row[score_10_21_index]\n",
    "\n",
    "results = []\n",
    "for row in data:\n",
    "    name = row[name_index]\n",
    "    max_score = max(row[i] for i in score_indices)\n",
    "    score_10_14 = row[score_10_14_index]\n",
    "    avg_score = (max_score * 0.7) + (score_10_14 * 0.075)\n",
    "    results.append((name, round(avg_score)))\n",
    "\n",
    "\n",
    "for name, avg_score in results:\n",
    "    if name:  \n",
    "        print(f\"({name}: {avg_score})\")\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
